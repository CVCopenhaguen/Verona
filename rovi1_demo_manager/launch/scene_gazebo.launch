<?xml version="1.0"?>
<launch>
  <arg name="paused" default="false" doc="Starts gazebo in paused mode" />
  <arg name="gui" default="true" doc="Starts gazebo gui" />
  <arg name="use_sim_time" default="true"/>

  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="$(find workcell_scene_description)/worlds/demo.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
  </include>

  <!-- send robot urdf to param server -->
  <include file="$(find rovi1_demo_manager)/launch/scene_upload.launch"></include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 0.1" respawn="false" output="screen" />

  <include file="$(find ur_gazebo)/launch/controller_utils.launch"/>

  <!-- start this controller -->
  <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur5.yaml" command="load"/>
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>

  <!-- load other controllers -->
  <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="load joint_group_position_controller" />

  <!-- Moveit configuration -->
  <arg name="rviz" default="true"/>

  <!-- Launch moveit -->
  <remap from="/follow_joint_trajectory" to="/arm_controller/follow_joint_trajectory"/>
  <include file="$(find ur5_moveit_config)/launch/ur5_moveit_planning_execution.launch">
      <arg name="limited" value="false"/>
      <arg name="debug" default="false" />
      <arg name="sim" value="true" />
  </include>

  <!-- Launch rviz-->
  <group if="$(arg rviz)">
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find rovi1_demo_manager)/config/default.rviz" />
  </group>

  <!-- Launch trajectory generation for the marker -->
  <node name="marker_trajectory_node" pkg="planning_servoing" type="marker_trajectory_node" output="screen"></node>
    <param name="gazebo_topic" type="str" value="gazebo/set_link_state"/>
    <param name="link_gazebo" type="str" value="robot::marker_link"/>
    <param name="reference_gazebo" type="str" value="ground_plane::link"/>
    <param name="planning_group" type="str" value="manipulator"/>
    <param name="link_rviz" type="str" value="marker_link"/>
    <param name="reference_rviz" type="str" value="world"/>
</launch>